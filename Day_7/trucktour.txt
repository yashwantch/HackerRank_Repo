import java.io.*;
import java.math.*;
import java.text.*;
import java.util.*;
import java.util.regex.*;

public class Solution {

    /*
     * Complete the truckTour function below.
     */
    static int truckTour(int[][] petrolpumps) {
        /*
         * Write your code here.
         */
        
        int[] capValue = new int[petrolpumps.length];
        int length = petrolpumps.length;
        int start=-1;

    ArrayDeque<Integer> queue = new ArrayDeque<Integer>();

    int Petrol;
    int Distance;

    for(int row=0;row<length;row++)
    {
        Petrol = petrolpumps[row][0];
        Distance = petrolpumps[row][1];
        capValue[row] = Petrol - Distance;

        if(Petrol>=Distance)
            queue.add(row);
    }

    boolean flag = true;

    while(!queue.isEmpty() && flag )
    {
        start = queue.remove();
        int row = start;
        int sum =0;

        while(sum>=0)
        {
            if(row==start && sum!=0)
            {
                flag = false;
                break;
            }


            row = row % length;
            sum += capValue[row];
            row++;
        }
    }

    return start;
}


    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) throws IOException {
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int n = Integer.parseInt(scanner.nextLine().trim());

        int[][] petrolpumps = new int[n][2];

        for (int petrolpumpsRowItr = 0; petrolpumpsRowItr < n; petrolpumpsRowItr++) {
            String[] petrolpumpsRowItems = scanner.nextLine().split(" ");

            for (int petrolpumpsColumnItr = 0; petrolpumpsColumnItr < 2; petrolpumpsColumnItr++) {
                int petrolpumpsItem = Integer.parseInt(petrolpumpsRowItems[petrolpumpsColumnItr].trim());
                petrolpumps[petrolpumpsRowItr][petrolpumpsColumnItr] = petrolpumpsItem;
            }
        }

        int result = truckTour(petrolpumps);

        bufferedWriter.write(String.valueOf(result));
        bufferedWriter.newLine();

        bufferedWriter.close();
    }
}
