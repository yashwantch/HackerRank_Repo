import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

public class Solution {

    // Complete the isBalanced function below.
    static String isBalanced(String s) {
        
        
        boolean status = true;
        char[] temp = s.toCharArray();
            Stack st = new Stack();
            for(int i = 0 ; i < s.length() ; i++)
            {
              if(temp[i] == '{' || temp[i] == '(' || temp[i] == '[')
              {
                  st.push(temp[i]);
              }//if
                if(temp[i] == '}') {
                    if(!st.empty() && (char)st.peek() == '{'){
                        st.pop();
                    }else{
                        status = false;
                    }
                }
                
                if(temp[i] == ')') {
                    if(!st.empty() && (char)st.peek() == '('){
                        st.pop();
                    }else{
                        status = false;
                    }
                }
                if(temp[i] == ']') {
                    if(!st.empty() && (char)st.peek() == '['){
                        st.pop();
                    }else{
                        status = false;
                    }
                }
            }
            
            if(st.empty() && status==true) {
                return "YES";
            } else {
                return "NO";
            }
            //Complete the code
        }
        

    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) throws IOException {
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int t = scanner.nextInt();
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        for (int tItr = 0; tItr < t; tItr++) {
            String s = scanner.nextLine();

            String result = isBalanced(s);

            bufferedWriter.write(result);
            bufferedWriter.newLine();
        }

        bufferedWriter.close();

        scanner.close();
    }
}
