import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

public class Solution {

    // Complete the pylons function below.
    static int pylons(int k, int[] arr) {
        
        int i = 0;
        int j = 0;
        int count = 0;
        int n = arr.length;
        while(i < n){
            j = i + k - 1;
            if(j >= n) {
                j = n - 1;
            }
            while(j >= 0 && ((j + k ) > i) && arr[j] != 1) {
                j--; 
            } 
            if(j < 0 || (j + k) <= i) {
                return -1; 
            } else {
                count++;
            }
            i = j + k;
      }
    return count;
        
    

    }

    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) throws IOException {
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        String[] nk = scanner.nextLine().split(" ");

        int n = Integer.parseInt(nk[0]);

        int k = Integer.parseInt(nk[1]);

        int[] arr = new int[n];

        String[] arrItems = scanner.nextLine().split(" ");
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        for (int i = 0; i < n; i++) {
            int arrItem = Integer.parseInt(arrItems[i]);
            arr[i] = arrItem;
        }

        int result = pylons(k, arr);

        bufferedWriter.write(String.valueOf(result));
        bufferedWriter.newLine();

        bufferedWriter.close();

        scanner.close();
    }
}
